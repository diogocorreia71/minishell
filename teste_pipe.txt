#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/wait.h>

int main(void)
{
    int fd[2];
    int pid1;
    int pid2;

    if (pipe(fd) == -1)
        return (1);
    pid1 = fork();
    if (pid1 == -1)
        return (1);
    if (pid1 == 0)
    {
        //Child process 1
        close(fd[0]);
        write(fd[1], "Hello", 6);
        close(fd[1]);
        exit(0);
    }
    pid2 = fork();
    if (pid2 == -1)
        return (1);
    if (pid2 == 0)
    {   
        //Child process 2
        char buffer[6];
        int i = -1;
        close(fd[1]);
        while (++i < 6)
            read(fd[0], &buffer[i], 1);
        printf("%s\n", buffer);
        close(fd[0]);
        exit(0);
    }
    //Parent process
    close(fd[0]);
    close(fd[1]);
    waitpid(pid1, NULL, 0);
    waitpid(pid2, NULL, 0);
    return (0);
}